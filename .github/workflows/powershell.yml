name: PowerShell

on:
  push:
    paths:
      - '**/*.ps1'
      - '**/*.psm1'
  pull_request:
    paths:
      - '**/*.ps1'
      - '**/*.psm1'

jobs:
  analyze:
    name: Analyze PowerShell Scripts
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install PSScriptAnalyzer and Pester
        shell: pwsh
        run: |
          Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser
          Install-Module -Name Pester -Force -Scope CurrentUser

      - name: Set BOM on PowerShell scripts (for CI/CD on GitHub)
        shell: pwsh
        run: |
          Get-ChildItem -Path ./ -Filter *.ps1 -Recurse | ForEach-Object {
            $content = Get-Content $_.FullName
            [System.IO.File]::WriteAllLines($_.FullName, $content, (New-Object System.Text.UTF8Encoding $true))
          }

      - name: Run PSScriptAnalyzer
        shell: pwsh
        run: |
          $results = Invoke-ScriptAnalyzer -Path ./ -Recurse -Severity Warning,Error -OutVariable issues
          $issues | ForEach-Object { Write-Host "$($_.RuleName): $($_.Message)" }
          if ($issues.Count -gt 0) {
            Write-Error "PSScriptAnalyzer found issues"
            exit 1
          }

      - name: Run Pester Tests (if available) # TODO: add tests to harden pwsh stack
        shell: pwsh
        run: |
          if (Test-Path './tests' -and (Get-ChildItem -Path ./tests -Filter *.Tests.ps1 -Recurse)) {
            Invoke-Pester -Path ./tests -CI
          } else {
            Write-Output "[INFO] No Pester tests found. Skipping."
          }

      - name: Secret Scan with Gitleaks
        uses: gitleaks/gitleaks-action@v2

